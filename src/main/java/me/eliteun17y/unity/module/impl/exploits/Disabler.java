package me.eliteun17y.unity.module.impl.exploits;

import me.eliteun17y.unity.event.Direction;
import me.eliteun17y.unity.event.Subscribe;
import me.eliteun17y.unity.event.impl.EventPacket;
import me.eliteun17y.unity.event.impl.EventUpdate;
import me.eliteun17y.unity.module.Category;
import me.eliteun17y.unity.module.Module;
import me.eliteun17y.unity.util.chat.ChatUtil;
import me.eliteun17y.unity.util.player.PlayerUtil;
import me.eliteun17y.unity.util.setting.impl.ModeValue;
import me.eliteun17y.unity.util.time.Timer;
import me.eliteun17y.unity.util.world.PacketUtil;
import me.eliteun17y.unity.util.world.TimerUtil;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.entity.item.EntityBoat;
import net.minecraft.entity.player.PlayerCapabilities;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.SPacketOpenWindow;
import net.minecraft.network.play.server.SPacketPlayerPosLook;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
import org.lwjgl.input.Keyboard;

import java.util.ArrayList;
import java.util.UUID;

public class Disabler extends Module {
    public ModeValue mode = new ModeValue(this, "Mode", "Development", "Development");

    public Timer timer = new Timer();
    public ArrayList<Packet> packets = new ArrayList<>();

    public Disabler() {
        super("Disabler", "Disables anticheats.", Category.EXPLOITS, Keyboard.KEY_NONE);
    }

    @Override
    public void onEnable() {
        super.onEnable();
        timer.reset();
    }

    @Override
    public void onDisable() {
        super.onDisable();
        TimerUtil.setSpeed(1);
    }

    @Subscribe
    public void onUpdate(EventUpdate event) {
        switch(mode.getMode()) {
            case "Development":
                /*TimerUtil.setSpeed(1);
                PlayerCapabilities capabilities = new PlayerCapabilities();
                capabilities.isFlying = true;
                capabilities.allowFlying = true;
                capabilities.allowEdit = true;
                capabilities.setFlySpeed(Float.NaN);
                //mc.getConnection().sendPacket(new CPacketPlayerAbilities(capabilities));*/
                //TimerUtil.setSpeed(10f);
                //mc.getConnection().sendPacket(new CPacketKeepAlive((long) (Math.random() * (Long.MAX_VALUE - Long.MIN_VALUE + 1) + Long.MIN_VALUE)));

                EntityBoat entityBoat = new EntityBoat(mc.world);

                entityBoat.posX = Double.POSITIVE_INFINITY;
                entityBoat.posY = Double.POSITIVE_INFINITY;
                entityBoat.posZ = Double.POSITIVE_INFINITY;
                entityBoat.rotationYaw = Float.POSITIVE_INFINITY;
                entityBoat.rotationPitch = Float.POSITIVE_INFINITY;

                PacketUtil.sendSilentPacket(new CPacketVehicleMove());
                break;
        }
    }

    @Subscribe
    public void onPacket(EventPacket event) {
        switch(mode.getMode()) {
            case "Development":
                if(event.getDirection() == Direction.INCOMING) {
                    ChatUtil.sendClientMessage(event.getPacket().getClass().getSimpleName());
                }
                if(event.getDirection() == Direction.OUTGOING) {
                    event.setCancelled(true);
                    /*if(event.getPacket() instanceof CPacketPlayer) {
                        ObfuscationReflectionHelper.setPrivateValue(CPacketPlayer.class, (CPacketPlayer) event.getPacket(), true, "field_149480_h");
                        ObfuscationReflectionHelper.setPrivateValue(CPacketPlayer.class, (CPacketPlayer) event.getPacket(), true, "field_149481_i");

                    }

                    if(event.getPacket() instanceof CPacketKeepAlive) {
                        ChatUtil.sendClientMessage("Keep alive.");
                        ObfuscationReflectionHelper.setPrivateValue(CPacketKeepAlive.class, (CPacketKeepAlive) event.getPacket(), Long., "field_149461_a");
                    }*/
                }
                break;
        }
    }
}
